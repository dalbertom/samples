apply plugin: 'base' // to get the clean task
/*
    1. Define a `FileTree` that specifies all `*.txt` files under `content`.
    2. Add a task `showFiles` that prints out the files of the file tree defined in 1.).
    3. Add a task `copyTree` that copies the file tree from 1.) into `build/filetree`.
    4. Add a task `copyFiles` that copies all files of the file tree from 1.) into `build/files`.

        Hint: `FileTree`, `FileCollection` and `Set<File>` objects are valid inputs for the Copy task.
*/    

//def ft = fileTree(dir: 'content', include: '**/*.txt')
def ft = fileTree(dir: 'content').matching { include '**/*.txt' }

task showFiles {
  doLast {
    ft.each { //only shows files
    //ft.visit { //shows dirs as well
      println it
    }
  }
}

task copyTree(type: Copy) {
  from ft
  into "$buildDir/filetree"
}

task copyFiles(type: Copy) {
  from ft.files
  into "$buildDir/files"
}
