/*
    1. Execute the `build` task.
    2. Execute the `build` task, excluding the `test` task.
    3. Execute the `build` task, excluding the `test` and `assemble` task.
    4. If the system property `releaseManager` is set, add an `upload` task.
        Hint: You can pass a system property to Gradle with the `-D` command line option.

    5. Execute `gradle tasks` with and without `releaseManager` set.
    6. (Optional) Change the code: always create `upload` task
        but use onlyIf method to skip the upload task when `releaseManager` is not set
*/    

task generateTestData
task test { dependsOn generateTestData }
task assemble
task build { dependsOn test, assemble }

// gradle --console=plain build
// gradle --console=plain build -x test
// gradle --console=plain build -x test -x assemble

if (System.getProperty('releaseManager') != null || hasProperty('releaseManager')) { // call with -PreleaseManager
  task upload {
    doLast {
      println "upload"
    }
  }
}

task upload2 {
  onlyIf { System.getProperty('releaseManager') != null || project.hasProperty('releaseManager') } // needs project.hasProperty, otherwise it would call hasProperty on the wrong delegate
  doLast {
    println "upload2"
  }
}
