/*
    1. Write a custom task class of type `Greeting`. 
		- Add a property `greeting` for the greeting text. 
		- Assign a default value to it.
        - The task action should print the greeting text property. 
		- Add two tasks to your build script, both of type `Greeting`.
        - One should assign a custom value to the greeting property. 
		- Execute both tasks.
       
    2. Is there an alternative to using an annotation for adding a task action to a custom task?
*/


class Greeting extends DefaultTask {
  //@Input
  def greeting = "world"

  /* // It is preferred to use the @TaskAction annotation
  Greeting() {
    greeting = "there"
    doLast {
      println "Hello $greeting"
    }
  }
  */

  @TaskAction
  void greet() {
    println "Hello $greeting"
  }
}

task greeting1(type: Greeting)

task greeting2(type: Greeting) {
  greeting = 'David'
}

defaultTasks 'greeting1', 'greeting2'
